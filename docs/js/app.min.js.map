{"version":3,"sources":["docs/js/app.js"],"names":["GlslCanvasWrapper","GlslCanvas","prototype","loadBuffers","buffers","glsl","this","gl","i","bundle","program","W","H","useProgram","textureOut","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","textureIn","buffer","createFramebuffer","render","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","drawArrays","TRIANGLES","copyTexImage2D","vertex","createShader","vertexString","VERTEX_SHADER","key","fragment","common","FRAGMENT_SHADER","isValid","createProgram","canvas","width","height","deleteShader","loadUniforms","options","textures","uniformTexture","filtering","repeat","updateVariables","date","Date","now","performance","variables","prev","delta","load","timeLoad","time","year","getFullYear","month","getMonth","getDate","daytime","getHours","getMinutes","getSeconds","getMilliseconds","UpdateUniforms","uniform2f","getUniformLocation","nTime","uniform1f","nDelta","nDate","uniform4f","uniform1i","resizeBuffers","Object","keys","length","renderGl","visible","getBoundingClientRect","top","window","innerHeight","document","documentElement","clientHeight","forceRender","animated","paused","change","trigger","setMouse","mouse","rect","x","left","right","y","bottom","_resize","resize","source","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","console","error","shaders","optAttribs","optLocations","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","log","deleteProgram","flag","apply","main","onGlslError","message","errors","warnings","replace","m","l","v","t","li","encodeURI","JSON","stringify","uri","Number","push","output","join","querySelector","setAttribute","innerHTML","addEventListener","url","callback","request","RegExp","match","name","content","ri","premultipliedAlpha","preserveDrawingBuffer","backgroundColor","init","w","offsetWidth","h","offsetHeight","style","on","trim","clearTimeout","setTimeout","createCanvas","XMLHttpRequest","open","responseText","send"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console, GlslCanvas, CaptureService, GuiService, TrailsService, CameraService, Stats, dat */\n\n(function () {\n    'use strict';\n\n    var GlslCanvasWrapper = function () {\n\n        function GlslCanvasWrapper(canvas, options) {\n            return new GlslCanvas(canvas, options);\n        }\n\n        GlslCanvas.prototype.loadBuffers = loadBuffers;\n        GlslCanvas.prototype.loadUniforms = loadUniforms;\n        GlslCanvas.prototype.updateVariables = updateVariables;\n        GlslCanvas.prototype.UpdateUniforms = UpdateUniforms;\n        GlslCanvas.prototype.resizeBuffers = resizeBuffers;\n        GlslCanvas.prototype.renderGl = renderGl;\n        GlslCanvas.prototype.render = render;\n\n        var _setMouse = GlslCanvas.prototype.setMouse;\n        GlslCanvas.prototype.setMouse = setMouse;\n\n        var _resize = GlslCanvas.prototype.resize;\n        GlslCanvas.prototype.resize = resize;\n\n        // GlslCanvas.prototype.uniform = uniform;\n\n        function loadBuffers(buffers) {\n            var glsl = this,\n                gl = glsl.gl,\n                i = 0;\n            glsl.buffers = {};\n            gl.bundle = function (program, i, W, H) {\n                gl.useProgram(program);\n                var textureOut = gl.createTexture();\n                gl.activeTexture(gl.TEXTURE0 + i * 2); //           <-- out activate\n                gl.bindTexture(gl.TEXTURE_2D, textureOut);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var textureIn = gl.createTexture();\n                gl.activeTexture(gl.TEXTURE0 + i * 2 + 1); //       <-- in activate\n                gl.bindTexture(gl.TEXTURE_2D, textureIn);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var buffer = gl.createFramebuffer();\n                return {\n                    textureIn: textureIn,\n                    textureOut: textureOut,\n                    render: function (W, H) {\n                        gl.useProgram(program);\n                        gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n                        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textureOut, 0);\n                        gl.activeTexture(gl.TEXTURE0 + i * 2); //           <-- out activate\n                        gl.bindTexture(gl.TEXTURE_2D, textureOut); //       <-- out bind\n                        gl.viewport(0, 0, W, H);\n                        gl.drawArrays(gl.TRIANGLES, 0, 6); //               <-- out draw\n                        gl.activeTexture(gl.TEXTURE0 + i * 2 + 1); //                   <-- in activate\n                        gl.bindTexture(gl.TEXTURE_2D, textureIn); //                    <-- in bind\n                        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, 0, W, H, 0); // <-- in copy\n                    }\n                };\n            };\n\n            var vertex = createShader(glsl, glsl.vertexString, gl.VERTEX_SHADER);\n            for (var key in buffers) {\n                var buffer = buffers[key];\n                var fragment = createShader(glsl, buffer.common + buffer.fragment, gl.FRAGMENT_SHADER);\n                if (!fragment) {\n                    fragment = createShader(glsl, 'void main(){\\n\\tgl_FragColor = vec4(1.0);\\n}', gl.FRAGMENT_SHADER);\n                    glsl.isValid = false;\n                } else {\n                    glsl.isValid = true;\n                }\n                var program = createProgram(glsl, [vertex, fragment]);\n                buffer.program = program;\n                buffer.bundle = gl.bundle(program, i, glsl.canvas.width, glsl.canvas.height);\n                // console.log(i, key, buffer.common + buffer.fragment, buffer.bundle);\n                glsl.buffers[key] = buffer;\n                gl.deleteShader(fragment);\n                i++;\n            }\n            gl.deleteShader(vertex);\n        }\n\n        function resize() {\n            var glsl = this;\n            var flag = _resize.apply(glsl);\n            if (flag) {\n                glsl.resizeBuffers();\n            }\n            return flag;\n        }\n\n        function resizeBuffers() {\n            var glsl = this,\n                gl = glsl.gl;\n            if (glsl.buffers && Object.keys(glsl.buffers).length > 0) {\n                var i = 0,\n                    W = gl.canvas.width,\n                    H = gl.canvas.height;\n                gl.viewport(0, 0, W, H);\n                for (var key in glsl.buffers) {\n                    var buffer = glsl.buffers[key];\n                    gl.useProgram(buffer.program);\n                    // \n                    gl.activeTexture(gl.TEXTURE0 + i * 2);\n                    gl.bindTexture(gl.TEXTURE_2D, buffer.bundle.textureOut);\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                    // \n                    gl.activeTexture(gl.TEXTURE0 + i * 2 + 1);\n                    gl.bindTexture(gl.TEXTURE_2D, buffer.bundle.textureIn);\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                    i++;\n                }\n                gl.useProgram(glsl.program);\n            }\n        }\n\n        function loadUniforms(options) {\n            if (options.textures) {\n                for (var key in options.textures) {\n                    glsl.uniformTexture('u_texture_' + key, options.textures[key], {\n                        filtering: 'mipmap',\n                        repeat: true,\n                    });\n                }\n            }\n        }\n\n        function setMouse(mouse) {\n            // _setMouse(mouse);\n            var glsl = this,\n                gl = glsl.gl;\n            var rect = this.canvas.getBoundingClientRect();\n            if (mouse && mouse.x && mouse.x >= rect.left && mouse.x <= rect.right && mouse.y && mouse.y >= rect.top && mouse.y <= rect.bottom) {\n                var x = mouse.x - rect.left;\n                var y = this.canvas.height - (mouse.y - rect.top);\n                // this.uniform('2f', 'vec2', 'u_mouse', x, y);\n                if (glsl.buffers && Object.keys(glsl.buffers).length > 0) {\n                    for (var key in glsl.buffers) {\n                        var buffer = glsl.buffers[key];\n                        gl.useProgram(buffer.program);\n                        gl.uniform2f(gl.getUniformLocation(buffer.program, 'u_mouse'), x, y);\n                    }\n                }\n                gl.useProgram(glsl.program);\n                gl.uniform2f(gl.getUniformLocation(glsl.program, 'u_mouse'), x, y);\n            }\n        }\n\n        function updateVariables() {\n            var glsl = this,\n                gl = glsl.gl;\n            var date = new Date();\n            var now = performance.now();\n            glsl.variables = glsl.variables || {};\n            glsl.variables.prev = glsl.variables.prev || now;\n            glsl.variables.delta = (now - glsl.variables.prev) / 1000.0;\n            glsl.variables.prev = now;\n            glsl.variables.load = glsl.timeLoad;\n            glsl.variables.time = (now - glsl.timeLoad) / 1000.0;\n            glsl.variables.year = date.getFullYear();\n            glsl.variables.month = date.getMonth();\n            glsl.variables.date = date.getDate();\n            glsl.variables.daytime = date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001;\n        }\n\n        function UpdateUniforms(program, key) {\n            var glsl = this,\n                gl = glsl.gl;\n\n            gl.useProgram(program);\n\n            gl.uniform2f(gl.getUniformLocation(program, 'u_resolution'), glsl.canvas.width, glsl.canvas.height);\n\n            if (glsl.nTime > 1) {\n                gl.uniform1f(gl.getUniformLocation(program, 'u_time'), glsl.variables.time);\n            }\n\n            if (glsl.nDelta > 1) {\n                gl.uniform1f(gl.getUniformLocation(program, 'u_delta'), glsl.variables.delta);\n            }\n\n            if (glsl.nDate) {\n                // Set date uniform: year/month/day/time_in_sec\n                gl.uniform4f(gl.getUniformLocation(program, 'u_date'), glsl.variables.year, glsl.variables.month, glsl.variables.date, glsl.variables.daytime);\n            }\n\n            /*\n            glsl.texureIndex = 0;\n            for (var key in glsl.textures) {\n                glsl.uniformTexture(key, {\n                    filtering: 'mipmap',\n                    repeat: true,\n                });\n            }\n            */\n\n            var i = 0;\n            for (var key in glsl.buffers) {\n                program.buffers = program.buffers || {};\n                if (!program.buffers[\"u_buffer_\" + i]) {\n                    program.buffers[\"u_buffer_\" + i] = true;\n                    gl.uniform1i(gl.getUniformLocation(program, \"u_buffer_\" + i), i * 2 + 1);\n                }\n                i++;\n            }\n\n            /*\n            var i = 0,\n                au = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n            while (i < au) {\n                var info = gl.getActiveUniform(program, i);\n                console.log('info', key, info);\n                i++;\n            }\n            console.log('status', key, 'link', gl.getProgramParameter(program, gl.LINK_STATUS), 'validate', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n            */\n\n            // console.log(key, 'u_time', u_time.location);\n\n        }\n\n        function renderGl() {\n            var glsl = this,\n                gl = glsl.gl, W = gl.canvas.width, H = gl.canvas.height;\n            glsl.updateVariables();\n            gl.viewport(0, 0, W, H);\n            if (glsl.buffers && Object.keys(glsl.buffers).length > 0) {\n                for (var key in glsl.buffers) {\n                    var buffer = glsl.buffers[key];\n                    glsl.UpdateUniforms(buffer.program, key);\n                    buffer.bundle.render(W, H);\n                }\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            }\n            glsl.UpdateUniforms(glsl.program, 'main');\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        }\n\n        function render() {\n            var glsl = this,\n                gl = glsl.gl;\n            glsl.visible = isCanvasVisible(glsl.canvas);\n            // glsl.animated = true;\n            if (glsl.forceRender || (glsl.animated && glsl.visible && !glsl.paused)) {\n                glsl.renderGl();\n                glsl.change = false;\n                glsl.forceRender = false;\n                glsl.trigger('render', {});\n            }\n        }\n\n        function createShader(glsl, source, type) {\n            var gl = glsl.gl;\n            var shader = gl.createShader(type);\n            gl.shaderSource(shader, source);\n            gl.compileShader(shader);\n            var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n            if (!compiled) {\n                var lastError = gl.getShaderInfoLog(shader);\n                console.error('*** Error compiling shader ' + shader + ':' + lastError);\n                glsl.trigger('error', {\n                    shader: shader,\n                    source: source,\n                    type: type,\n                    error: lastError\n                });\n                gl.deleteShader(shader);\n                return null;\n            }\n            return shader;\n        }\n\n        function createProgram(glsl, shaders, optAttribs, optLocations) {\n            var gl = glsl.gl;\n            var i;\n            var program = gl.createProgram();\n            for (i = 0; i < shaders.length; ++i) {\n                gl.attachShader(program, shaders[i]);\n            }\n            if (optAttribs) {\n                for (i = 0; i < optAttribs.length; ++i) {\n                    gl.bindAttribLocation(program, optLocations ? optLocations[i] : i, optAttribs[i]);\n                }\n            }\n            gl.linkProgram(program);\n            var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n            if (!linked) {\n                var lastError = gl.getProgramInfoLog(program);\n                console.log('Error in program linking:' + lastError);\n                gl.deleteProgram(program);\n                return null;\n            }\n            return program;\n        }\n\n        function isCanvasVisible(canvas) {\n            return ((canvas.getBoundingClientRect().top + canvas.height) > 0) && (canvas.getBoundingClientRect().top < (window.innerHeight || document.documentElement.clientHeight));\n        }\n\n        return GlslCanvasWrapper;\n\n    }();\n\n    var options = window.options = {\n        vertex: '',\n        fragment: '',\n        main: '',\n        buffers: {},\n    };\n\n    function init() {\n        getResource(\"shaders/buffers/milk.glsl\", function (fragment) {\n            // (?<=\\/{2} u_buffer_)(\\d+).*((.|\\n)*?)(?=\\/{2} [u_buffer|main]|\\z)\n            // (?<=\\/{2} main).*((.|\\n)*?)(?=\\/{2} u_buffer|\\z)\n            fragment = fragment.replace(new RegExp('(/{2} u_buffer_)(\\\\d+).*((.|\\\\n)*?)(?=/{2} u_buffer|/{2} main|$)', 'g'), function (match, name, i, fragment) {\n                // console.log('u_buffer_.replace', arguments);\n                options.buffers['u_buffer_' + i] = {\n                    fragment: fragment,\n                };\n                return '';\n            });\n\n            fragment = fragment.replace(new RegExp('(/{2} main).*((.|\\\\n)*)(?=/{2} u_buffer|$)', 'g'), function (match, name, main) {\n                options.main = main;\n                return '';\n            });\n\n            // console.log('getResource', fragment, options.buffers);\n            for (var key in options.buffers) {\n                options.buffers[key].common = fragment;\n            }\n\n            options.fragment = fragment + (options.main || '');\n            // console.log('fragment', options.fragment);\n            createCanvas();\n        });\n    }\n\n    function createCanvas() {\n        var content = document.querySelector('.content');\n        var canvas = document.querySelector('.shader');\n\n        resize(true);\n\n        var glsl = new GlslCanvasWrapper(canvas, {\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: true,\n            backgroundColor: 'rgba(1,1,1,1)',\n        });\n        glsl.animated = true;\n        glsl.on('error', onGlslError);\n        glsl.on('render', function () {\n            // glsl.forceRender = true;\n        });\n\n        load();\n\n        function load() {\n            var options = window.options;\n            document.querySelector('.errors').setAttribute('class', 'errors');\n            document.querySelector('.welcome').setAttribute('class', 'welcome');\n            options.vertex = options.vertex.trim().length > 0 ? options.vertex : null;\n            options.fragment = options.fragment.trim().length > 0 ? options.fragment : null;\n            if (options.fragment || options.vertex) {\n                document.querySelector('body').setAttribute('class', 'ready');\n            } else {\n                document.querySelector('body').setAttribute('class', 'empty');\n            }\n            glsl.load(options.fragment, options.vertex);\n            glsl.loadBuffers(options.buffers);\n            glsl.loadUniforms(options);\n\n            // console.log('glsl', glsl);\n            /*\n            gui.load(options.uniforms);\n            glsl.setUniforms(gui.uniforms());\n            */\n        }\n\n        function resize(init) {\n            var w = content.offsetWidth;\n            var h = content.offsetHeight;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            if (init) {\n                canvas.width = w;\n                canvas.height = h;\n            } else {\n                glsl.resize();\n            }\n        }\n\n        var ri;\n\n        function onResize() {\n            if (ri) {\n                clearTimeout(ri);\n            }\n            ri = setTimeout(resize, 50);\n        }\n\n        window.addEventListener('resize', onResize);\n\n        resize();\n    }\n\n    function onGlslError(message) {\n        console.log('onGlslError.error', message.error);\n        var options = window.options;\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var message = 'ERROR (' + v + ') ' + t;\n            var li = '<li><a class=\"error\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div class=\"errors-content\"><p>glslCanvas error</p><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.querySelector('.errors').setAttribute('class', 'errors active');\n        document.querySelector('.errors').innerHTML = output;\n        document.querySelector('body').setAttribute('class', 'idle');\n    }\n\n    function getResource(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function () {\n            callback(request.responseText);\n        });\n        request.send();\n    }\n\n    window.addEventListener('load', init);\n\n}());"]}